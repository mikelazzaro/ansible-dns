---

- name: Get latest AMI
  ec2_ami_find:
    name: "{{ provision_latest_ami_pattern }}"
    owner: "{{ provision_latest_ami_owner }}"
    sort: name
    sort_order: descending
    sort_end: 1
  when: provision_use_latest_ami
  register: ami_list

- name: Set aws_ami based on lookup
  set_fact:
    aws_ami: "{{ ami_find.results[0].ami_id }}"
  when: provision_use_latest_ami

- name: Get subnet ID
  local_action: ec2_vpc_subnet_facts
  args:
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ aws_subnet_name }}"
  register: subnet_facts

- set_fact:
    subnet_id: "{{ subnet_facts.subnets[0].id }}"

- name: Ensure host exists
  local_action: ec2
  args:
    instance_type: "{{ aws_instance_type }}"
    image: "{{ aws_ami }}"
    region: "{{ aws_region }}"
    vpc_subnet_id: "{{ subnet_id }}"
    group: "{{ aws_security_group_name }}"
    key_name: "{{ aws_ssh_key }}"
    instance_tags:
      Name: "{{ aws_name_tag }}"
    assign_public_ip: no
    private_ip: "{{ private_ip_address }}"
    exact_count: 1
    count_tag:
      Name: "{{ aws_name_tag }}"
    wait: yes
  register: ec2