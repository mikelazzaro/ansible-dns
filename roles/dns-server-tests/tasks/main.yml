---

# Will fail if the DNS server is not properly configured to use *itself* as primary DNS server
- name: Confirm basic DNS settings are correct
  command: "nslookup api.corp."
  changed_when: false

# Checks to see if DNS server can resolve various domains from a local session
- name: Basic resolution testing - internal
  command: "nslookup {{ item }} localhost"
  changed_when: false
  with_items:
    # Local domains
    - "api.corp."
    - "db.corp."
    - "media.corp."
    # Global domains
    - "central-dns01.global.corp."
    - "{{ api_server_hostname }}."
    # External domains
    - "google.com."
    - "otgexp.com."

- name: Basic resolution testing - internal (isolated)
  command: "nslookup {{ item }} localhost"
  changed_when: false
  with_items:
    # Local domains
    - "{{ api_server_hostname }}"
    - "{{ api_server_nontest_hostname }}"
    - "{{ dns_nontest_primary_hostname }}"
    - "{{ dns_nontest_secondary_hostname }}"
  when: is_isolated

- name: Basic resolution testing - internal (non-isolated)
  command: "nslookup {{ item }} localhost"
  changed_when: false
  with_items:
    - "alpha-dns01.global.corp"
    - "beta-dns02.global.corp"
    - "gamma-dns01-testing.global.corp"
  when: not is_isolated

# Checks to see if DNS server can resolve various domains from an outside host
- name: Basic resolution testing - external
  delegate_to: localhost
  command: "nslookup {{ item }} {{ ansible_host }}"
  changed_when: false
  with_items:
    # Local domains
    - "api.corp."
    - "db.corp."
    - "media.corp."
    # Global domains
    - "central-dns01.global.corp."
    - "{{ api_server_hostname }}."
    # External domains
    - "google.com."
    - "otgexp.com."

#- name: Run full set of resolution tests, including checking for correctness
#  include_tasks: check_dns_entry.yml
#  with_items: "{{ test_domains }}"

- name: Run full set of resolution tests, including checking for correctness
  command: "nslookup {{ item.domain }} localhost"
  with_items: "{{ test_domains }}"
  register: test_result
  failed_when: item.address != test_result.stdout_lines[-1][9:]
  changed_when: False

#- name: Run full set of resolution tests (non-isolated)
#  include_tasks: check_dns_entry.yml
#  with_items: "{{ test_domains_non_isolated }}"
#  when: not is_isolated

- name: Run full set of resolution tests (non-isolated)
  command: "nslookup {{ item.domain }} localhost"
  with_items: "{{ test_domains_non_isolated }}"
  register: test_result
  failed_when: item.address != test_result.stdout_lines[-1][9:]
  changed_when: False
  when: not is_isolated

#- name: Run full set of resolution tests (isolated)
#  include_tasks: check_dns_entry.yml
#  with_items: "{{ test_domains_isolated }}"
#  when: is_isolated

- name: Run full set of resolution tests (isolated)
  command: "nslookup {{ item.domain }} localhost"
  with_items: "{{ test_domains_isolated }}"
  register: test_result
  failed_when: item.address != test_result.stdout_lines[-1][9:]
  changed_when: False
  when: is_isolated

